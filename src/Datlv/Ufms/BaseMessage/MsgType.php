<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : src/track.proto
 */


namespace Datlv\Ufms\BaseMessage;

/**
 * Protobuf enum : ufms.BaseMessage.MsgType
 */
class MsgType extends \Protobuf\Enum
{

    /**
     * WayPoint = 100
     */
    const WayPoint_VALUE = 100;

    /**
     * RegVehicle = 400
     */
    const RegVehicle_VALUE = 400;

    /**
     * RegDriver = 410
     */
    const RegDriver_VALUE = 410;

    /**
     * RegCompany = 420
     */
    const RegCompany_VALUE = 420;

    /**
     * @var \Datlv\Ufms\BaseMessage\MsgType
     */
    protected static $WayPoint = null;

    /**
     * @var \Datlv\Ufms\BaseMessage\MsgType
     */
    protected static $RegVehicle = null;

    /**
     * @var \Datlv\Ufms\BaseMessage\MsgType
     */
    protected static $RegDriver = null;

    /**
     * @var \Datlv\Ufms\BaseMessage\MsgType
     */
    protected static $RegCompany = null;

    /**
     * @return \Datlv\Ufms\BaseMessage\MsgType
     */
    public static function WayPoint()
    {
        if (self::$WayPoint !== null) {
            return self::$WayPoint;
        }

        return self::$WayPoint = new self('WayPoint', self::WayPoint_VALUE);
    }

    /**
     * @return \Datlv\Ufms\BaseMessage\MsgType
     */
    public static function RegVehicle()
    {
        if (self::$RegVehicle !== null) {
            return self::$RegVehicle;
        }

        return self::$RegVehicle = new self('RegVehicle', self::RegVehicle_VALUE);
    }

    /**
     * @return \Datlv\Ufms\BaseMessage\MsgType
     */
    public static function RegDriver()
    {
        if (self::$RegDriver !== null) {
            return self::$RegDriver;
        }

        return self::$RegDriver = new self('RegDriver', self::RegDriver_VALUE);
    }

    /**
     * @return \Datlv\Ufms\BaseMessage\MsgType
     */
    public static function RegCompany()
    {
        if (self::$RegCompany !== null) {
            return self::$RegCompany;
        }

        return self::$RegCompany = new self('RegCompany', self::RegCompany_VALUE);
    }

    /**
     * @param int $value
     * @return \Datlv\Ufms\BaseMessage\MsgType
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 100: return self::WayPoint();
            case 400: return self::RegVehicle();
            case 410: return self::RegDriver();
            case 420: return self::RegCompany();
            default: return null;
        }
    }


}

